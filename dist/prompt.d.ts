export declare const systemPrompt: () => string;
export declare const serpQueryPromptTemplate = "## Search Strategy Configuration\n**Query Type Distribution:**\n- Informational: 40%\n- Comparative: 25% \n- Technical: 20%\n- Exploratory: 15%\n\n**Response Format Requirements:**\n```json\n{\n  \"queries\": {\n    \"type\": \"array\",\n    \"items\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"query\": {\"type\": \"string\", \"maxLength\": 60},\n        \"type\": {\"type\": \"string\", \"enum\": [\"informational\", \"comparative\", \"technical\", \"exploratory\"]},\n        \"expectedSources\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}}\n      },\n      \"required\": [\"query\", \"type\"]\n    },\n    \"minItems\": {{numQueries}},\n    \"maxItems\": {{numQueries}}\n  }\n}\n```";
export declare const learningPromptTemplate = "## Content Analysis Protocol\n**Schema Version:** 2.1.0\n**Error Handling:**\n- 5001: Invalid source credibility score\n- 5002: Missing fact verification\n- 5003: Technical term mismatch\n\n{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"errorCodes\": {\n    \"5001\": \"Source score must be 1-5\",\n    \"5002\": \"Minimum 3 verifications required\",\n    \"5003\": \"Undefined technical terms present\"\n  },\n  \"type\": \"object\",\n  \"properties\": {\n    \"learnings\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\",\n        \"maxLength\": 280,\n        \"pattern\": \"^[A-Z][^.]{10,255}\\.\"\n      }\n    }\n  },\n  \"required\": [\"learnings\"],\n  \"additionalProperties\": false\n}";
export declare const feedbackPromptTemplate = "## Query Refinement Matrix\n**Quality Metrics:**\n- Specificity Score (1-5)\n- Research Depth Potential\n- Answerability Estimate\n\n**Response Schema:**\n```json\n{\n  \"followUpQuestions\": {\n    \"type\": \"array\",\n    \"items\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"question\": {\"type\": \"string\"},\n        \"purpose\": {\"type\": \"string\", \"enum\": [\"scope\", \"context\", \"precision\"]},\n        \"criticality\": {\"type\": \"number\", \"minimum\": 1, \"maximum\": 3}\n      }\n    }\n  }\n}\n```";
export declare const generateGeminiPrompt: ({ query, researchGoal, learnings }: {
    query: string;
    researchGoal: string;
    learnings: string[];
}) => string;
export declare const clearPromptCache: () => void;
//# sourceMappingURL=prompt.d.ts.map